#compdef nuclei

_arguments \
  '-u[Target URLs/hosts to scan]:target URLs/hosts' \
  '-l[Path to file containing a list of target URLs/hosts to scan]:file path' \
  '-eh[Hosts to exclude to scan from the input list (ip, cidr, hostname)]:hosts to exclude' \
  '-resume[Resume scan using resume.cfg (clustering will be disabled)]:resume file' \
  '-sa[Scan all the IPs associated with dns record]' \
  '-iv[IP version to scan of hostname (4,6) - (default 4)]:IP version' \
  '-im[Mode of input file (list, burp, jsonl, yaml, openapi, swagger) (default "list")]:input mode' \
  '-ro[Use only required fields in input format when generating requests]' \
  '-sfv[Skip format validation (like missing vars) when parsing input file]' \
  '-nt[Run only new templates added in latest nuclei-templates release]' \
  '-ntv[Run new templates added in specific version]:version' \
  '-as[Automatic web scan using wappalyzer technology detection to tags mapping]' \
  '-t[List of template or template directory to run (comma-separated, file)]:templates' \
  '-turl[Template URL or list containing template URLs to run (comma-separated, file)]:template URL' \
  '-w[List of workflow or workflow directory to run (comma-separated, file)]:workflows' \
  '-wurl[Workflow URL or list containing workflow URLs to run (comma-separated, file)]:workflow URL' \
  '-validate[Validate the passed templates to nuclei]' \
  '-nss[Disable strict syntax check on templates]' \
  '-td[Displays the templates content]' \
  '-tl[List all available templates]' \
  '-tgl[List all available tags]' \
  '-sign[Signs the templates with the private key defined in NUCLEI_SIGNATURE_PRIVATE_KEY env variable]' \
  '-code[Enable loading code protocol-based templates]' \
  '-dut[Disable running unsigned templates or templates with mismatched signature]' \
  '-a[Templates to run based on authors (comma-separated, file)]:authors' \
  '-tags[Templates to run based on tags (comma-separated, file)]:tags' \
  '-etags[Templates to exclude based on tags (comma-separated, file)]:exclude tags' \
  '-itags[Tags to be executed even if they are excluded either by default or configuration]:include tags' \
  '-id[Templates to run based on template ids (comma-separated, file, allow-wildcard)]:template ids' \
  '-eid[Templates to exclude based on template ids (comma-separated, file)]:exclude ids' \
  '-it[Path to template file or directory to be executed even if they are excluded either by default or configuration]:include templates' \
  '-et[Path to template file or directory to exclude (comma-separated, file)]:exclude templates' \
  '-em[Template matchers to exclude in result]:matchers to exclude' \
  '-s[Templates to run based on severity. Possible values: info, low, medium, high, critical, unknown]:severity' \
  '-es[Templates to exclude based on severity. Possible values: info, low, medium, high, critical, unknown]:exclude severity' \
  '-pt[Templates to run based on protocol type. Possible values: dns, file, http, headless, tcp, workflow, ssl, websocket, whois, code, javascript]:protocol type' \
  '-ept[Templates to exclude based on protocol type. Possible values: dns, file, http, headless, tcp, workflow, ssl, websocket, whois, code, javascript]:exclude protocol type' \
  '-tc[Templates to run based on expression condition]:expression condition' \
  '-o[Output file to write found issues/vulnerabilities]:output file' \
  '-sresp[Store all request/response passed through nuclei to output directory]' \
  '-srd[Store all request/response passed through nuclei to custom directory (default "output")]:custom directory' \
  '-silent[Display findings only]' \
  '-nc[Disable output content coloring (ANSI escape codes)]' \
  '-j[Write output in JSONL(ines) format]' \
  '-irr[Include request/response pairs in the JSON, JSONL, and Markdown outputs (for findings only)]' \
  '-omit-raw[Omit request/response pairs in the JSON, JSONL, and Markdown outputs (for findings only)]' \
  '-or[Omit request/response pairs in the JSON, JSONL, and Markdown outputs (for findings only)]' \
  '-ot[Omit encoded template in the JSON, JSONL output]' \
  '-nm[Disable printing result metadata in cli output]' \
  '-ts[Enables printing timestamp in cli output]' \
  '-rdb[Nuclei reporting database (always use this to persist report data)]:reporting database' \
  '-ms[Display match failure status]' \
  '-me[Directory to export results in markdown format]:markdown export directory' \
  '-se[File to export results in SARIF format]:SARIF export file' \
  '-je[File to export results in JSON format]:JSON export file' \
  '-jle[File to export results in JSONL(ine) format]:JSONL export file' \
  '-rd[Redact given list of keys from query parameter, request header and body]:keys to redact' \
  '-config[Path to the nuclei configuration file]:config file' \
  '-tp[Template profile config file to run]:profile config file' \
  '-tpl[List community template profiles]' \
  '-fr[Enable following redirects for http templates]' \
  '-fhr[Follow redirects on the same host]' \
  '-mr[Max number of redirects to follow for http templates (default 10)]:max redirects' \
  '-dr[Disable redirects for http templates]' \
  '-rc[Nuclei reporting module configuration file]:report config file' \
  '-H[Custom header/cookie to include in all http request in header:value format (cli, file)]:custom header' \
  '-V[Custom vars in key=value format]:custom vars' \
  '-r[File containing resolver list for nuclei]:resolver file' \
  '-sr[Use system DNS resolving as error fallback]' \
  '-dc[Disable clustering of requests]' \
  '-passive[Enable passive HTTP response processing mode]' \
  '-fh2[Force http2 connection on requests]' \
  '-ev[Enable environment variables to be used in template]' \
  '-cc[Client certificate file (PEM-encoded) used for authenticating against scanned hosts]:client certificate file' \
  '-ck[Client key file (PEM-encoded) used for authenticating against scanned hosts]:client key file' \
  '-ca[Client certificate authority file (PEM-encoded) used for authenticating against scanned hosts]:client CA file' \
  '-sml[Show match lines for file templates, works with extractors only]' \
  '-ztls[Use ztls library with autofallback to standard one for tls13]' \
  '-sni[TLS SNI hostname to use (default: input domain name)]:SNI hostname' \
  '-dka[Keep-alive duration for network requests]:keep-alive duration' \
  '-lfa[Allows file (payload) access anywhere on the system]' \
  '-lna[Blocks connections to the local / private network]' \
  '-i[Network interface to use for network scan]:network interface' \
  '-at[Type of payload combinations to perform (batteringram,pitchfork,clusterbomb)]:attack type' \
  '-sip[Source IP address to use for network scan]:source IP' \
  '-rsr[Max response size to read in bytes]:max response size read' \
  '-rss[Max response size to read in bytes (default 1048576)]:max response size save' \
  '-reset[Remove all nuclei configuration and data files (including nuclei-templates)]' \
  '-tlsi[Enable experimental client hello (ja3) TLS randomization]' \
  '-hae[Experimental HTTP API endpoint]:API endpoint' \
  '-iserver[Interactsh server URL for self-hosted instance (default: oast.pro,oast.live,oast.site,oast.online,oast.fun,oast.me)]:interactsh server URL' \
  '-itoken[Authentication token for self-hosted interactsh server]:interactsh token' \
  '-interactions-cache-size[Number of requests to keep in the interactions cache (default 5000)]:cache size' \
  '-interactions-eviction[Number of seconds to wait before evicting requests from cache (default 60)]:eviction time' \
  '-interactions-poll-duration[Number of seconds to wait before each interaction poll request (default 5)]:poll duration' \
  '-interactions-cooldown-period[Extra time for interaction polling before exiting (default 5)]:cooldown period' \
  '-ni[Disable interactsh server for OAST testing, exclude OAST based templates]' \
  '-ft[Overrides fuzzing type set in template (replace, prefix, postfix, infix)]:fuzzing type' \
  '-fm[Overrides fuzzing mode set in template (multiple, single)]:fuzzing mode' \
  '-fuzz[Enable loading fuzzing templates (Deprecated: use -dast)]' \
  '-dast[Enable loading fuzzing templates]' \
  '-aopt[Advanced options for payload fuzzing (e.g., delay, max connections, etc.)]:advanced options' \
  '-iopt[Advanced options for IP fuzzing (e.g., delay, max connections, etc.)]:advanced options' \
  '-exp[Custom experimental options for nuclei]:experimental options' \
  '-templ[Custom template profiles (if needed)]:template profiles' \
  '-rcf[Custom reporting config file]:report config file' \
  '-response-time[Maximum response time to wait for each request (default 30 seconds)]:response time' \
  '-header[Custom HTTP headers to include in requests]:custom headers' \
  '-debug[Enable debug output for debugging nuclei issues]' \
  '-v[Enable verbose mode]' \
  '-h[Display help information]' \
  '-version[Display version information]' \
  '*::arg:->args'

# For completion within the function definitions
if (( $+functions[nuclei_completions] )); then
  nuclei_completions
fi
